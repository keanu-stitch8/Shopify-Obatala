{% assign selected_variant = product.selected_or_first_available_variant %}

<style>
    .swiper-button-prev, .swiper-button-next { color: black; top: auto !important; height: 20px; }
    .swiper-button-prev::after, .swiper-button-next::after { font-size: 20px; }
    .swiper-pagination { color: black; bottom: 0 !important; }
    .swiper-pagination-bullet-active { background: black !important; }
    .product--information { height: fit-content; }
    .splide__slide.is-active > div { border-color: var(--color-accent)!important; }
</style>

<div x-data="{ productModalOpen: false }" class="bg-white">
  <div class="max-w-8xl mx-auto px-4 py-4 md:py-8">
    <div class="grid grid-cols-1 md:grid-cols-12 gap-4">
      <div class="product--medias col-span-8">
        <div id="main-carousel" class="splide mb-4 md:mb-8">
          <div class="splide__track">
            <div class="splide__list">
              {% for media in product.media %}
                <div class="splide__slide">
                  <div class="leading-0">
                    {% render 'product-media', media: media, imageWidth: 1080, imageClass: "object-contain h-100" %}
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>
        </div>

        <div id="thumbnails-carousel" class="splide">
          <div class="splide__track">
            <div class="splide__list">
              {% for media in product.media %}
                <div class="splide__slide">
                  <div class="relative aspect-4/3 border border-gray-300">
                    {% render 'product-media', media: media, imageWidth: 100, imageClass: "absolute left-2 top-2 w-[calc(100%-1rem)] h-[calc(100%-1rem)] object-contain" %}
                  </div>
                </div>
              {% endfor %}
            </div>
          </div>
        </div>
      </div>

      <div class="product--information sticky top-5 md:col-span-4">
        {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
          <input type="hidden" name="id" value="{{ selected_variant.id }}">

          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'vendor' %}
                <div class="my-3">
                  <span class="text-xs text-gray-500">{{ product.vendor }}</span>
                </div>
              {% when 'title' %}
                <div class="my-3">
                  <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
                </div>
              {% when 'price' %}
                <div class="my-3" id="price-{{ section.id }}">
                  <span class="text-base text-gray-500 line-through">{{ selected_variant.compare_at_price | money }}</span>
                  <span class="text-lg text-gray-900">{{ selected_variant.price | money }}</span>

                  {% if selected_variant.price < selected_variant.compare_at_price %}
                    <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                  {% endif %}
                </div>
              {% when 'variant_selector' %}
                <div class="my-3">
                  {% unless product.has_only_default_variant %}
                    <variant-selector data-url="{{ product.url}}" data-section="{{ section.id }}">
                      {% for option in product.options_with_values %}
                        <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                        <div class="my-2">
                          <select 
                            name="options[{{ option.name | escape }}]" 
                            id="Option-{{ section.id }}-{{ forloop.index0 }}" 
                            class="w-full border py-3 px-3"
                          >
                            {% for value in option.values %}
                              <option 
                                value="{{ value | escape }}"
                                  {% if option.selected_value == value %}
                                    selected="selected"
                                  {% endif %}
                                >
                                  {{ value }}
                              </option>
                            {% endfor %}
                          </select>
                        </div>

                        <script type="application/json">
                          {{ product.variants | json }}
                        </script>

                      {% endfor %}
                    </variant-selector>
                  {% endunless %}
                </div>

              {% when 'quantity' %}
                <div class="my-3">
                  <label for="Quantity-{{ section.id }}">Quantity</label>

                  <div class="my-2">
                    <input type="number" name="quantity" id="Quantity-{{ section.id }}" value="1" min="1" class="w-full border px-3 py-3">
                  </div>
                </div>

              {% when 'checkout_button' %}
                <div class="my-3">
                  <button type="submit" name="add" class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2"
                    {% if selected_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                    {% if selected_variant.available == false %}
                      Sold out
                    {% else %}
                      Add to cart
                    {% endif %}
                  </button>
                </div>
                    
            {% endcase %}
          {% endfor %}
        {% endform %}
      </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-12 gap-4">
      <div class="col-span-6">
        <div class="my-3">
          <p class="text-gray-700">{{ product.description }}</p>
        </div>
      </div>
    </div>

    <div x-show="productModalOpen" id="productModelModal" class="fixed inset-0 z-10 w-screen overflow-y-auto bg-gray-900/75 transition-opacity">
      <div class="relative w-full h-full flex flex-col bg-white text-left">
        <div class="bg-white border-b border-b-gray-200 p-6">
          <div class="flex items-center justify-between">
            <h2 class="text-lg font-medium">
              {{ 'products.product.media.play_model' | t }}
            </h2>
            <button x-on:click="productModalOpen = false" class="text-gray-500 cursor-pointer">
              {% render 'icon-xmark' %}
            </button>
          </div>
        </div>
      <div id="body" class="flex-1 p-6"></div>
    </div>
  </div>
</div>

<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();

      if(this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
        console.log(this.options);
      }

      getVariantJSON() {
        this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
        return this.variantData;
      }

      getSelectedVariant() {
        this.currentVariant = this.getVariantJSON().find(
          (variant) => {
            const findings = !variant.options.map(
              (option, index) => {
                return this.options[index] === option;
              }
              ).includes(false);

              if(findings) return variant;
              }
          );

          console.log(this.currentVariant);
        }

        updateURL() {
          if(!this.currentVariant) return;
          window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
        }

        updateFormID() {
          const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
          form_input.value = this.currentVariant.id;
        }

        updatePrice() {
          fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
          .then((response) => response.text())
          .then((responseText) => {
            const id = `price-${this.dataset.section}`;
            const html = new DOMParser().parseFromString(responseText, 'text/html');

            const oldPrice = document.getElementById(id);
            const newPrice = html.getElementById(id);

            if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
          });
      }
    }

  customElements.define("variant-selector", VariantSelector);
</script>

<script>
  document.addEventListener( 'DOMContentLoaded', function() {
    var main = new Splide( '#main-carousel', {
      type: "fade",
      rewind: true,
      arrows: false,
      pagination: false,
    });

    var thumbnails = new Splide( '#thumbnails-carousel', {
      perPage: 5,
      gap: 16,
      rewinnd: true,
      arrows: false,
      pagination: false,
      isNavigation: true,
    });

    main.sync( thumbnails );
    main.mount();
    thumbnails.mount();
  } );
</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_button",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}